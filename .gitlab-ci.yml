image: docker:19.03.12

stages:
  - build
  - push

services:
  - docker:19.03.12-dind 

variables:
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_DRIVER: overlay2

default:
  before_script:
    - echo $CI_REGISTRY_PASSWORD | docker login --password-stdin -u $CI_REGISTRY_USER $CI_REGISTRY


### BUILD ###
build:
  stage: build
  only:
    - master
  script:
    - docker pull $CI_REGISTRY_IMAGE:build-native-hadoop-cache || true
    - >
      docker build
      --pull
      --cache-from $CI_REGISTRY_IMAGE:build-native-hadoop-cache
      --tag $CI_REGISTRY_IMAGE:build-native-hadoop-cache
      --tag build-native-hadoop
      -f build-native-hadoop.Dockerfile
      . | tee -a build-native-hadoop.log
    - docker push $CI_REGISTRY_IMAGE:build-native-hadoop-cache
    - docker pull $CI_REGISTRY_IMAGE:build-sqoop-cache || true
    - >
      docker build
      --pull
      --cache-from $CI_REGISTRY_IMAGE:build-sqoop-cache
      --tag $CI_REGISTRY_IMAGE:build-sqoop-cache
      --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
      -f build-sqoop.Dockerfile
      . | tee -a build-sqoop.log
    - docker push $CI_REGISTRY_IMAGE:build-sqoop-cache
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  artifacts:
    when: always
    expire_in: 1 day
    paths:
      - build-native-hadoop.log
      - build-sqoop.log

### PUSH ###
push:
  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    GIT_STRATEGY: none
  stage: push
  only:
    - master
  script:
    - CI_IMAGE_TAG=$(if [ ${CI_COMMIT_REF_NAME} == master ]; then echo latest; else echo $CI_COMMIT_REF_NAME; fi)
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:$CI_IMAGE_TAG
    - docker push $CI_REGISTRY_IMAGE:$CI_IMAGE_TAG
